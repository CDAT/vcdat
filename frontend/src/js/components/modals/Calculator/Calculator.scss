$numeric-button-lighter-color: rgb(233, 246, 255);
$numeric-button-darker-color: rgb(135, 183, 214);
$numeric-button-hover-color: rgb(84, 155, 203);

$save-clear-button-lighter-color: rgb(255, 223, 223);
$save-clear-button-darker-color: rgb(255, 132, 132);
$save-clear-button-hover-color: rgb(203, 88, 88);

$math-button-lighter-color: rgb(255, 245, 223);
$math-button-darker-color: rgb(255, 245, 132);
$math-button-hover-color: rgb(222, 210, 83);

$advanced-button-lighter-color: rgb(230, 255, 223);
$advanced-button-darker-color: rgb(153, 255, 132);
$advanced-button-hover-color: rgb(90, 222, 83);

.main-container {
    display: grid;
    grid-template-columns: 2fr 7fr;
    grid-column-gap: 15px;
}
.variable-list {
    grid-column: 1 / 2;
    grid-row: 1 / 2;
    height: 100%;
    box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.1);
    .scroll-area {
        border: 1px #d3d3d373 solid;
    }
}

// .operation-list {
//     grid-column: 1 / 2;
//     grid-row: 2 / 3;
// }

.calc-right-side {
    display: flex;
    flex-direction: column;
}
.input-area {
    height: 80px;
    border: lightgray 1px solid;
    &.drop-hint {
        border-color: cyan;
    }
    &.drop-success {
        border-color: lime;
    }
    display: grid;
    grid-template-columns: 10fr minmax(15px, 1fr) 14fr;
    grid-template-rows: 1fr 1fr;
    input {
        font-size: 18px;
    }
    #new-variable-name {
        grid-column: 1 / 2;
        grid-row: 1 / 2;
    }
    #new-variable-name-help-text {
        grid-column: 1 / 2;
        grid-row: 2 / 3;
    }
    #assignment {
        grid-column: 2 / 3;
        grid-row: 1 / 2;
        line-height: 25px;
        display: flex;
        justify-content: center;
        align-items: center;
    }
    #calculation {
        grid-column: 3 / 4;
        grid-row: 1 / 2;
        background-color: rgb(238, 239, 238);
    }
    #calculation-help-text {
        grid-column: 3 / 4;
        grid-row: 2 / 3;
    }
}

.calculator-buttons {
    // The contents of this div is the individual buttons
    // We now define a grid for those buttons to populate
    height: 320px;
    width: 100%;
    border: lightgray 1px solid;
    border-top: none;
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr 1fr;
    grid-template-rows: repeat(5, minmax(28px, 45px));
    align-content: end;
    grid-template-areas:
    // periods indicate blank cells
        "regrid power . . ."
        "unused seven eight nine divide"
        "clear four five six multiply"
        "delete one two three subtract"
        "enter zero decimal plusminus add";
    .dropdown.btn-group {
        // This section fixes some bootstrap css issues
        // flex settings fix button sizing
        // border settings make dropdown buttons consistent with other buttons
        // width setting overwrites a previous rule that we dont want applied to the carat button
        display: flex;
        border: 1px solid #ccc;
        border-radius: 4px;
        button.btn:first-child {
            flex-grow: 1;
        }
        .dropdown-toggle.calc-button {
            width: unset;
        }
    }
}

.calc-button {
    width: 100%;
    font-size: 15px;
    font-weight: 700;
    &.numeric {
        background: $numeric-button-lighter-color;
        background-image: -webkit-linear-gradient(top, $numeric-button-lighter-color, $numeric-button-darker-color);
        background-image: -moz-linear-gradient(top, $numeric-button-lighter-color, $numeric-button-darker-color);
        background-image: -ms-linear-gradient(top, $numeric-button-lighter-color, $numeric-button-darker-color);
        background-image: -o-linear-gradient(top, $numeric-button-lighter-color, $numeric-button-darker-color);
        background-image: linear-gradient(to bottom, $numeric-button-lighter-color, $numeric-button-darker-color);
        &:hover {
            background: $numeric-button-lighter-color;
            background-image: -webkit-linear-gradient(top, $numeric-button-lighter-color, $numeric-button-hover-color);
            background-image: -moz-linear-gradient(top, $numeric-button-lighter-color, $numeric-button-hover-color);
            background-image: -ms-linear-gradient(top, $numeric-button-lighter-color, $numeric-button-hover-color);
            background-image: -o-linear-gradient(top, $numeric-button-lighter-color, $numeric-button-hover-color);
            background-image: linear-gradient(to bottom, $numeric-button-lighter-color, $numeric-button-hover-color);
        }
    }
    &.save-clear {
        background: $save-clear-button-lighter-color;
        background-image: -webkit-linear-gradient(top, $save-clear-button-lighter-color, $save-clear-button-darker-color);
        background-image: -moz-linear-gradient(top, $save-clear-button-lighter-color, $save-clear-button-darker-color);
        background-image: -ms-linear-gradient(top, $save-clear-button-lighter-color, $save-clear-button-darker-color);
        background-image: -o-linear-gradient(top, $save-clear-button-lighter-color, $save-clear-button-darker-color);
        background-image: linear-gradient(to bottom, $save-clear-button-lighter-color, $save-clear-button-darker-color);
        &:hover {
            background: $save-clear-button-lighter-color;
            background-image: -webkit-linear-gradient(top, $save-clear-button-lighter-color, $save-clear-button-hover-color);
            background-image: -moz-linear-gradient(top, $save-clear-button-lighter-color, $save-clear-button-hover-color);
            background-image: -ms-linear-gradient(top, $save-clear-button-lighter-color, $save-clear-button-hover-color);
            background-image: -o-linear-gradient(top, $save-clear-button-lighter-color, $save-clear-button-hover-color);
            background-image: linear-gradient(to bottom, $save-clear-button-lighter-color, $save-clear-button-hover-color);
        }
    }
    &.math {
        background: $math-button-lighter-color;
        background-image: -webkit-linear-gradient(top, $math-button-lighter-color, $math-button-darker-color);
        background-image: -moz-linear-gradient(top, $math-button-lighter-color, $math-button-darker-color);
        background-image: -ms-linear-gradient(top, $math-button-lighter-color, $math-button-darker-color);
        background-image: -o-linear-gradient(top, $math-button-lighter-color, $math-button-darker-color);
        background-image: linear-gradient(to bottom, $math-button-lighter-color, $math-button-darker-color);
        &:hover {
            background: $math-button-lighter-color;
            background-image: -webkit-linear-gradient(top, $math-button-lighter-color, $math-button-hover-color);
            background-image: -moz-linear-gradient(top, $math-button-lighter-color, $math-button-hover-color);
            background-image: -ms-linear-gradient(top, $math-button-lighter-color, $math-button-hover-color);
            background-image: -o-linear-gradient(top, $math-button-lighter-color, $math-button-hover-color);
            background-image: linear-gradient(to bottom, $math-button-lighter-color, $math-button-hover-color);
        }
    }

    &.advanced {
        background: $advanced-button-lighter-color;
        background-image: -webkit-linear-gradient(top, $advanced-button-lighter-color, $advanced-button-darker-color);
        background-image: -moz-linear-gradient(top, $advanced-button-lighter-color, $advanced-button-darker-color);
        background-image: -ms-linear-gradient(top, $advanced-button-lighter-color, $advanced-button-darker-color);
        background-image: -o-linear-gradient(top, $advanced-button-lighter-color, $advanced-button-darker-color);
        background-image: linear-gradient(to bottom, $advanced-button-lighter-color, $advanced-button-darker-color);
        &:hover {
            background: $advanced-button-lighter-color;
            background-image: -webkit-linear-gradient(top, $advanced-button-lighter-color, $advanced-button-hover-color);
            background-image: -moz-linear-gradient(top, $advanced-button-lighter-color, $advanced-button-hover-color);
            background-image: -ms-linear-gradient(top, $advanced-button-lighter-color, $advanced-button-hover-color);
            background-image: -o-linear-gradient(top, $advanced-button-lighter-color, $advanced-button-hover-color);
            background-image: linear-gradient(to bottom, $advanced-button-lighter-color, $advanced-button-hover-color);
        }
    }
}

.sub-text {
    font-size: smaller;
    font-weight: 100;
}

// We individually map each button to a named grid location.
// Hopefully this should make rearranging items easy (E.g. for media queries)
#regrid {
    grid-area: regrid;
}
#power {
    grid-area: power;
}
#unused {
    grid-area: unused;
}
#seven {
    grid-area: seven;
}
#eight {
    grid-area: eight;
}
#nine {
    grid-area: nine;
}
#divide {
    grid-area: divide;
}
#clear {
    grid-area: clear;
}
#four {
    grid-area: four;
}
#five {
    grid-area: five;
}
#six {
    grid-area: six;
}
#multiply {
    grid-area: multiply;
}
#delete {
    grid-area: delete;
}
#one {
    grid-area: one;
}
#two {
    grid-area: two;
}
#three {
    grid-area: three;
}
#subtract {
    grid-area: subtract;
}
#enter {
    grid-area: enter;
}
#zero {
    grid-area: zero;
}
#decimal {
    grid-area: decimal;
}
#plusminus {
    grid-area: plusminus;
}
#add {
    grid-area: add;
}

@media (min-width: 992px) {
    .input-area {
        padding: 9px 15px;
    }
}
